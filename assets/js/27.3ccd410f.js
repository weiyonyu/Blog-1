(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{412:function(s,t,a){s.exports=a.p+"assets/img/1.7568527b.png"},494:function(s,t,a){"use strict";a.r(t);var v=a(13),e=Object(v.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"vite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[s._v("#")]),s._v(" vite")]),s._v(" "),t("p",[s._v("vite 是一个思维比较前卫而且先进的构建工具, 解决了一些 webpack 解决不了的问题, 同时降低了开发配置负担")]),s._v(" "),t("p",[s._v("Vite 也是 Vue 团队的官方出品, Vue-cli 会在今后将 vite 作为预设构建工具(目前只基于浏览器项目)")]),s._v(" "),t("p",[s._v("和所有的构建工具一样, Vite 也支持直接构建 react 项目, angular 项目")]),s._v(" "),t("h2",{attrs:{id:"构建工具介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建工具介绍"}},[s._v("#")]),s._v(" 构建工具介绍")]),s._v(" "),t("p",[s._v("企业级项目里都可能会具备哪些功能")]),s._v(" "),t("p",[s._v("typescript: 使用 tsc 将 typescript 代码转换为 js 代码\nVue: 安装 vue-complier, 将.vue 文件转换为 render 函数\nless/sass/postcss: 需要安装 less-loader, sass-loader 等一系列编译工具\n语法降级: babel ---\x3e 将 es 的新语法转换旧版浏览器可以接受的语法\n体积优化: uglifyjs ---\x3e 将代码进行压缩变成体积更小性能更高的文件\n.....")]),s._v(" "),t("h3",{attrs:{id:"什么是构建工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是构建工具"}},[s._v("#")]),s._v(" 什么是构建工具")]),s._v(" "),t("p",[s._v("当有一个东西能够帮你把这些东西全部集成到一起, 开发人员只需要关心代码, 每当代码发生变化, 可以自动执行一遍上面的内容, 这个就是"),t("strong",[s._v("构建工具")])]),s._v(" "),t("h3",{attrs:{id:"构建工具的任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建工具的任务"}},[s._v("#")]),s._v(" 构建工具的任务")]),s._v(" "),t("ol",[t("li",[s._v("模块化开发: 支持直接从 node_modules 里引入代码 + 多种模块化支持")]),s._v(" "),t("li",[s._v("处理代码兼容性: 集成其他工具, 例如 babel 语法降级, less,ts 语法转换")]),s._v(" "),t("li",[s._v("提高项目性能: 压缩文件, 代码分割")]),s._v(" "),t("li",[s._v("优化开发体验: 开发服务器, 热更新")]),s._v(" "),t("li",[s._v("打包文件: 将项目打包成一个浏览器可识别的文件合集")])]),s._v(" "),t("p",[t("strong",[s._v("构建工具的出现, 让我们不用关心生产的代码也不用关心代码如何在浏览器运行, 只需要关心我们的代码")])]),s._v(" "),t("h2",{attrs:{id:"vite-的优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite-的优势"}},[s._v("#")]),s._v(" vite 的优势")]),s._v(" "),t("h3",{attrs:{id:"解决的最大问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决的最大问题"}},[s._v("#")]),s._v(" 解决的最大问题")]),s._v(" "),t("p",[s._v("当我们开始构建越来越大型的应用时，需要处理的 JavaScript 代码量也呈指数级增长, 包含数千个模块的大型项目相当普遍。 项目逐步到达了性能瓶颈 —— 使用 JavaScript 开发的工具通常需要很长时间（甚至是几分钟）才能启动开发服务器，即使使用热更新，文件修改后的效果也需要几秒钟才能在浏览器中反映出来。")]),s._v(" "),t("h3",{attrs:{id:"webpack-支持多种模块导致的结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-支持多种模块导致的结果"}},[s._v("#")]),s._v(" webpack 支持多种模块导致的结果")]),s._v(" "),t("p",[s._v("为了支持工程不只是跑在浏览器端, webpack 是允许我们写 es6 module 和 commonjs")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// index.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这一段代码最终会到浏览器里去运行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" lodash "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lodash"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// commonjs 规范")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Vue "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// es6 module")]),s._v("\n")])])]),t("p",[s._v("导致 webpack 在一开始必须要统一模块化代码, 所以意味着他需要将所有的依赖全部读一遍")]),s._v(" "),t("h3",{attrs:{id:"vite-的改进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite-的改进"}},[s._v("#")]),s._v(" vite 的改进")]),s._v(" "),t("p",[s._v("Vite 通过在一开始将应用中的模块区分为 依赖 和 源码 两类，改进了开发服务器启动时间。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("依赖 大多为在开发时不会变动的纯 JavaScript。一些较大的依赖（例如有上百个模块的组件库）处理的代价也很高。依赖也通常会存在多种模块化格式（例如 ESM 或者 CommonJS）。\nVite 将会使用 esbuild 预构建依赖。esbuild 使用 Go 编写，并且比以 JavaScript 编写的打包器预构建依赖快 10-100 倍。")])]),s._v(" "),t("li",[t("p",[s._v("源码 通常包含一些并非直接是 JavaScript 的文件，需要转换（例如 JSX，CSS 或者 Vue/Svelte 组件），时常会被编辑。同时，并不是所有的源码都需要同时被加载（例如基于路由拆分的代码模块）。")])])]),s._v(" "),t("p",[s._v("Vite 以 原生 ESM 方式提供源码。这实际上是让浏览器接管了打包程序的部分工作："),t("strong",[s._v("Vite 只需要在浏览器请求源码时进行转换并按需提供源码.")]),s._v(" 根据情景动态导入代码，即只在当前屏幕上实际使用时才会被处理。")]),s._v(" "),t("h4",{attrs:{id:"依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#依赖"}},[s._v("#")]),s._v(" 依赖")]),s._v(" "),t("p",[s._v("Vite 执行时所做的“依赖预构建”这个过程有两个目的:")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("CommonJS 和 UMD 兼容性: 开发阶段中，Vite 的开发服务器将所有代码视为原生 ES 模块。因此，Vite 必须先将作为 CommonJS 或 UMD 发布的依赖项转换为 ESM。")])]),s._v(" "),t("li",[t("p",[s._v("性能： Vite 将有许多内部模块的 ESM 依赖关系转换为单个模块，以提高后续页面加载性能。(网络多包传输的性能问题)")])]),s._v(" "),t("li",[t("p",[s._v("路径处理: 构建的依赖可直接在.vite/deps 引用, 方便路径重写")])])]),s._v(" "),t("h4",{attrs:{id:"源码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[s._v("#")]),s._v(" 源码")]),s._v(" "),t("p",[s._v("在请求到 vue 文件的时候, vite 会将对应的 vue 文件进行 AST 语法树分析, 并编辑成浏览器可识别的 js 文件.")]),s._v(" "),t("p",[t("img",{attrs:{src:a(412),alt:"image"}})]),s._v(" "),t("h2",{attrs:{id:"vite-对-css-的处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite-对-css-的处理"}},[s._v("#")]),s._v(" vite 对 css 的处理")]),s._v(" "),t("p",[s._v("vite 对 css(less,sass)文件的处理流程如下:")]),s._v(" "),t("ol",[t("li",[s._v("vite 在读取 js 文件中得知引用到了 css 文件")]),s._v(" "),t("li",[s._v("使用 fs 模块去读取 css 中的文件内容")]),s._v(" "),t("li",[s._v("预处理器(less sass)编辑成原生 css")]),s._v(" "),t("li",[s._v("postcss 对 css 语法降级(浏览器兼容)")]),s._v(" "),t("li",[s._v("将该 css 文件中的内容替换为 js 脚本(方便热更新或者 css 模块化)")]),s._v(" "),t("li",[s._v("js 脚本会创建一个 style 标签, 将 css 中文件内容填入 style 标签里")]),s._v(" "),t("li",[s._v("将 style 标签插入到 index.html 的 head 中")])]),s._v(" "),t("h2",{attrs:{id:"vite-插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite-插件"}},[s._v("#")]),s._v(" vite 插件")]),s._v(" "),t("p",[s._v("vite 会在生命周期的不同阶段调用不同的插件, 以达到不同的目的")]),s._v(" "),t("p",[s._v("关于插件的编写可以看vite官网文档")]),s._v(" "),t("p",[s._v("https://cn.vitejs.dev/guide/api-plugin.html#authoring-a-plugin")]),s._v(" "),t("h2",{attrs:{id:"性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),t("p",[s._v("性能优化在工作中经常遇到, 可归纳为以下几点:")]),s._v(" "),t("ol",[t("li",[s._v("开发时的构建速度优化")])]),s._v(" "),t("ul",[t("li",[s._v("webpack 是全部构建编译, 所以下了很大功夫来解决这部分问题, 如使用缓存和多线程构建等")]),s._v(" "),t("li",[s._v("vite 由于是按需加载, 不太需要关心这方面")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("页面性能")])]),s._v(" "),t("ul",[t("li",[s._v("组件懒加载")]),s._v(" "),t("li",[s._v("资源缓存")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("js 逻辑")])]),s._v(" "),t("ul",[t("li",[s._v("定时器清理")]),s._v(" "),t("li",[s._v("作用域")])]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[s._v("css")])]),s._v(" "),t("ul",[t("li",[s._v("能继承就不重复")]),s._v(" "),t("li",[s._v("避免过深的 css 嵌套")])]),s._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[s._v("构建优化\n包括体积压缩, 代码分包, cdn加速等")])])])}),[],!1,null,null,null);t.default=e.exports}}]);